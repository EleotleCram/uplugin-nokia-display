#pragma once

// clang-format off

#include <stdint.h>

const uint8_t c64font[] PROGMEM =
{
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  //  
  0x02, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x00, 0xC0, 0x00,  // !
  0x06, 0xCC, 0xCC, 0xCC, 0x00, 0x00, 0x00, 0x00, 0x00,  // "
  0x07, 0x6C, 0x6C, 0xFE, 0x6C, 0xFE, 0x6C, 0x6C, 0x00,  // #
  0x06, 0x30, 0x7C, 0xC0, 0x78, 0x0C, 0xF8, 0x30, 0x00,  // $
  0x06, 0xCC, 0xCC, 0x18, 0x30, 0x60, 0xCC, 0xCC, 0x00,  // %
  0x07, 0x78, 0xCC, 0x78, 0x70, 0xCE, 0xCC, 0x7E, 0x00,  // &
  0x04, 0x60, 0x90, 0x90, 0x60, 0x00, 0x00, 0x00, 0x00,  // '
  0x04, 0x30, 0x60, 0xC0, 0xC0, 0xC0, 0x60, 0x30, 0x00,  // (
  0x04, 0xC0, 0x60, 0x30, 0x30, 0x30, 0x60, 0xC0, 0x00,  // )
  0x07, 0x00, 0x6C, 0x38, 0xFE, 0x38, 0x6C, 0x00, 0x00,  // *
  0x06, 0x00, 0x30, 0x30, 0xFC, 0x30, 0x30, 0x00, 0x00,  // +
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0xC0,  // ,
  0x06, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00,  // -
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0x00,  // .
  0x07, 0x00, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC0, 0x00,  // /
  0x06, 0x78, 0xCC, 0xDC, 0xEC, 0xCC, 0xCC, 0x78, 0x00,  // 0
  0x06, 0x30, 0x30, 0x70, 0x30, 0x30, 0x30, 0xFC, 0x00,  // 1
  0x06, 0x78, 0xCC, 0x0C, 0x38, 0x60, 0xC0, 0xFC, 0x00,  // 2
  0x06, 0x78, 0xCC, 0x0C, 0x38, 0x0C, 0xCC, 0x78, 0x00,  // 3
  // Note: width is actually 0x07, but this makes all digits equal width:
  0x06, 0x1C, 0x3C, 0x6C, 0xCC, 0xFE, 0x0C, 0x0C, 0x00,  // 4
  0x06, 0xFC, 0xC0, 0xF8, 0x0C, 0x0C, 0xCC, 0x78, 0x00,  // 5
  0x06, 0x78, 0xCC, 0xC0, 0xF8, 0xCC, 0xCC, 0x78, 0x00,  // 6
  0x06, 0xFC, 0x0C, 0x18, 0x30, 0x30, 0x30, 0x30, 0x00,  // 7
  0x06, 0x78, 0xCC, 0xCC, 0x78, 0xCC, 0xCC, 0x78, 0x00,  // 8
  0x06, 0x78, 0xCC, 0xCC, 0x7C, 0x0C, 0xCC, 0x78, 0x00,  // 9
  0x02, 0x00, 0x00, 0xC0, 0x00, 0x00, 0xC0, 0x00, 0x00,  // :
  0x03, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0xC0,  // ;
  0x06, 0x1C, 0x30, 0x60, 0xC0, 0x60, 0x30, 0x1C, 0x00,  // <
  0x06, 0x00, 0x00, 0xFC, 0x00, 0xFC, 0x00, 0x00, 0x00,  // =
  0x06, 0xE0, 0x30, 0x18, 0x0C, 0x18, 0x30, 0xE0, 0x00,  // >
  0x06, 0x78, 0xCC, 0x0C, 0x18, 0x30, 0x00, 0x30, 0x00,  // ?
  0x06, 0x78, 0xCC, 0xDC, 0xDC, 0xC0, 0xCC, 0x78, 0x00,  // @
  0x06, 0x30, 0x78, 0xCC, 0xCC, 0xFC, 0xCC, 0xCC, 0x00,  // A
  0x06, 0xF8, 0xCC, 0xCC, 0xF8, 0xCC, 0xCC, 0xF8, 0x00,  // B
  0x06, 0x78, 0xCC, 0xC0, 0xC0, 0xC0, 0xCC, 0x78, 0x00,  // C
  0x06, 0xF8, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xF8, 0x00,  // D
  0x06, 0xFC, 0xC0, 0xC0, 0xF0, 0xC0, 0xC0, 0xFC, 0x00,  // E
  0x06, 0xFC, 0xC0, 0xC0, 0xF0, 0xC0, 0xC0, 0xC0, 0x00,  // F
  0x06, 0x78, 0xCC, 0xC0, 0xDC, 0xCC, 0xCC, 0x78, 0x00,  // G
  0x06, 0xCC, 0xCC, 0xCC, 0xFC, 0xCC, 0xCC, 0xCC, 0x00,  // H
  0x04, 0xF0, 0x60, 0x60, 0x60, 0x60, 0x60, 0xF0, 0x00,  // I
  0x06, 0x3C, 0x18, 0x18, 0x18, 0x18, 0xD8, 0x70, 0x00,  // J
  0x06, 0xCC, 0xD8, 0xF0, 0xE0, 0xF0, 0xD8, 0xCC, 0x00,  // K
  0x06, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xFC, 0x00,  // L
  0x07, 0xC6, 0xEE, 0xFE, 0xD6, 0xC6, 0xC6, 0xC6, 0x00,  // M
  0x06, 0xCC, 0xCC, 0xEC, 0xFC, 0xDC, 0xCC, 0xCC, 0x00,  // N
  0x06, 0x78, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x78, 0x00,  // O
  0x06, 0xF8, 0xCC, 0xCC, 0xF8, 0xC0, 0xC0, 0xC0, 0x00,  // P
  0x06, 0x78, 0xCC, 0xCC, 0xCC, 0xCC, 0x78, 0x1C, 0x00,  // Q
  0x06, 0xF8, 0xCC, 0xCC, 0xF8, 0xF0, 0xD8, 0xCC, 0x00,  // R
  0x06, 0x78, 0xCC, 0xC0, 0x78, 0x0C, 0xCC, 0x78, 0x00,  // S
  0x06, 0xFC, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x00,  // T
  0x06, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x78, 0x00,  // U
  0x06, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x78, 0x30, 0x00,  // V
  0x07, 0xC6, 0xC6, 0xC6, 0xD6, 0xFE, 0xEE, 0xC6, 0x00,  // W
  0x06, 0xCC, 0x78, 0x30, 0x30, 0x30, 0x78, 0xCC, 0x00,  // X
  0x06, 0xCC, 0xCC, 0xCC, 0x78, 0x30, 0x30, 0x30, 0x00,  // Y
  0x06, 0xFC, 0x0C, 0x18, 0x30, 0x60, 0xC0, 0xFC, 0x00,  // Z
  0x04, 0xF0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xF0, 0x00,  // [
  0x07, 0x00, 0xC0, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x00,  // BackSlash
  0x04, 0xF0, 0x30, 0x30, 0x30, 0x30, 0x30, 0xF0, 0x00,  // ]
  0x06, 0x00, 0x30, 0x78, 0xFC, 0x30, 0x30, 0x30, 0x30,  // ^
  0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE,  // _
  0x07, 0x38, 0x68, 0xC6, 0xC0, 0xC6, 0x68, 0x38, 0x00,  // `
  0x06, 0x00, 0x00, 0x78, 0x0C, 0x7C, 0xCC, 0x7C, 0x00,  // a
  0x06, 0xC0, 0xC0, 0xF8, 0xCC, 0xCC, 0xCC, 0xF8, 0x00,  // b
  0x05, 0x00, 0x00, 0x78, 0xC0, 0xC0, 0xC0, 0x78, 0x00,  // c
  0x06, 0x0C, 0x0C, 0x7C, 0xCC, 0xCC, 0xCC, 0x7C, 0x00,  // d
  0x06, 0x00, 0x00, 0x78, 0xCC, 0xFC, 0xC0, 0x78, 0x00,  // e
  0x05, 0x38, 0x60, 0x60, 0xF8, 0x60, 0x60, 0x60, 0x00,  // f
  0x06, 0x00, 0x00, 0x7C, 0xCC, 0xCC, 0x7C, 0x0C, 0xF8,  // g
  0x06, 0xC0, 0xC0, 0xF8, 0xCC, 0xCC, 0xCC, 0xCC, 0x00,  // h
  0x04, 0x60, 0x00, 0xE0, 0x60, 0x60, 0x60, 0xF0, 0x00,  // i
  0x05, 0x18, 0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0xF0,  // j
  0x06, 0xC0, 0xC0, 0xCC, 0xD8, 0xF0, 0xD8, 0xCC, 0x00,  // k
  0x04, 0xE0, 0x60, 0x60, 0x60, 0x60, 0x60, 0xF0, 0x00,  // l
  0x07, 0x00, 0x00, 0x6C, 0xFE, 0xD6, 0xD6, 0xC6, 0x00,  // m
  0x06, 0x00, 0x00, 0xF8, 0xCC, 0xCC, 0xCC, 0xCC, 0x00,  // n
  0x06, 0x00, 0x00, 0x78, 0xCC, 0xCC, 0xCC, 0x78, 0x00,  // o
  0x06, 0x00, 0x00, 0xF8, 0xCC, 0xCC, 0xF8, 0xC0, 0xC0,  // p
  0x06, 0x00, 0x00, 0x7C, 0xCC, 0xCC, 0x7C, 0x0C, 0x0C,  // q
  0x06, 0x00, 0x00, 0xF8, 0xCC, 0xC0, 0xC0, 0xC0, 0x00,  // r
  0x06, 0x00, 0x00, 0x7C, 0xC0, 0x78, 0x0C, 0xF8, 0x00,  // s
  0x05, 0x60, 0x60, 0xF8, 0x60, 0x60, 0x60, 0x38, 0x00,  // t
  0x06, 0x00, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0x7C, 0x00,  // u
  0x06, 0x00, 0x00, 0xCC, 0xCC, 0xCC, 0x78, 0x30, 0x00,  // v
  0x07, 0x00, 0x00, 0xC6, 0xD6, 0xD6, 0x7C, 0x6C, 0x00,  // w
  0x06, 0x00, 0x00, 0xCC, 0x78, 0x30, 0x78, 0xCC, 0x00,  // x
  0x06, 0x00, 0x00, 0xCC, 0xCC, 0xCC, 0x7C, 0x18, 0xF0,  // y
  0x06, 0x00, 0x00, 0xFC, 0x18, 0x30, 0x60, 0xFC, 0x00,  // z
  0x05, 0x38, 0x60, 0x60, 0xE0, 0x60, 0x60, 0x38, 0x00,  // {
  0x02, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0,  // |
  0x05, 0xE0, 0x30, 0x30, 0x38, 0x30, 0x30, 0xE0, 0x00,  // }
};
